<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.finance.mapper.finance.FinanceInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.alex.finance.entity.finance.FinanceInfo">
        <result column="id" property="id" />
        <result column="is_delete" property="isDelete" />
        <result column="creator" property="creator" />
        <result column="updater" property="updater" />
        <result column="deleter" property="deleter" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="delete_time" property="deleteTime" />
        <result column="operate_time" property="operateTime" />
        <result column="name" property="name" />
        <result column="type_code" property="typeCode" />
        <result column="amount" property="amount" />
        <result column="from_source" property="fromSource" />
        <result column="is_valid" property="isValid" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        finance_info.id,
        finance_info.is_delete,
        finance_info.creator,
        finance_info.updater,
        finance_info.deleter,
        finance_info.create_time,
        finance_info.update_time,
        finance_info.delete_time,
        finance_info.operate_time,
        finance_info.`name`,
        finance_info.type_code,
        finance_info.amount,
        finance_info.from_source,
        finance_info.income_and_expenses,
        finance_info.belong_to,
        finance_info.info_date,
        finance_info.is_valid
    </sql>

    <select id="getPage" resultType="com.alex.api.finance.vo.finance.FinanceInfoVo">
        select <include refid="Base_Column_List"></include>, dict_info.type_name as from_source_name
        from finance_info
        left join dict_info
        on finance_info.from_source = dict_info.type_code and dict_info.is_delete = 0
       and dict_info.belong_to = 'pay_way'
        <where>
            finance_info.is_delete = 0
            <include refid="queryInfo"></include>
        </where>
        order by finance_info.info_date desc, finance_info.operate_time desc
    </select>

    <select id="getList" resultType="com.alex.api.finance.vo.finance.FinanceInfoVo">
        select <include refid="Base_Column_List"></include> from finance_info
        <where>
            is_delete = 0 <include refid="queryInfo"></include>
        </where>
            order by finance_info.info_date desc, finance_info.operate_time desc
    </select>

    <select id="queryFinanceInfo" resultType="com.alex.api.finance.vo.finance.FinanceInfoVo">
        select <include refid="Base_Column_List"></include> from finance_info
        <where>
            id = #{id} and is_delete = 0
        </where>
    </select>

     <sql id="queryInfo">
        <if test = "financeInfoVo != null">
          <if test = "financeInfoVo.name != null">
            and finance_info.name like concat('%', #{financeInfoVo.name}, '%')
          </if>
          <if test = "financeInfoVo.typeCode != null and financeInfoVo.typeCode != ''">
            and finance_info.type_code like concat('%', #{financeInfoVo.typeCode}, '%')
          </if>
          <if test = "financeInfoVo.amount != null and financeInfoVo.amount.size > 0">
            <foreach collection="financeInfoVo.amount" index="index" item="item" >
            <if test="index == 0">
                and finance_info.amount >= #{item}
            </if>
            <if test="index == 1">
                and finance_info.amount &lt;= #{item}
            </if>
          </foreach>
          </if>
          <if test = "financeInfoVo.fromSource != null">
            and finance_info.from_source = #{financeInfoVo.fromSource}
          </if>
          <if test = "financeInfoVo.incomeAndExpenses != null">
            and finance_info.income_and_expenses = #{financeInfoVo.incomeAndExpenses}
          </if>
          <if test = "financeInfoVo.belongTo != null">
            and finance_info.belong_to = #{financeInfoVo.belongTo}
          </if>
          <if test = "financeInfoVo.isValid != null">
            and finance_info.is_valid = #{financeInfoVo.isValid}
          </if>
          <if test = "financeInfoVo.infoDateStart != null">
            and finance_info.info_date >= #{financeInfoVo.infoDateStart}
          </if>
          <if test = "financeInfoVo.infoDateEnd != null">
            and finance_info.info_date &lt;= DATE_ADD(#{financeInfoVo.infoDateEnd}, interval 1 day)
          </if>
        </if>
     </sql>
</mapper>
