<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alex.finance.mapper.shopFinance.ShopFinanceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.alex.finance.entity.shopFinance.ShopFinance">
        <result column="id" property="id"/>
        <result column="is_delete" property="isDelete"/>
        <result column="creator" property="creator"/>
        <result column="updater" property="updater"/>
        <result column="deleter" property="deleter"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="delete_time" property="deleteTime"/>
        <result column="operator" property="operator"/>
        <result column="operate_time" property="operateTime"/>
        <result column="shop_name" property="shopName"/>
        <result column="shop_code" property="shopCode"/>
        <result column="sale_amount" property="saleAmount"/>
        <result column="is_valid" property="isValid"/>
        <result column="sale_date" property="saleDate"/>
        <result column="pay_way" property="payWay"/>
        <result column="income_and_expenses" property="incomeAndExpenses"/>
        <result column="sale_num" property="saleNum"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        t_shop_finance.id,
        t_shop_finance.is_delete,
        t_shop_finance.creator,
        t_shop_finance.updater,
        t_shop_finance.deleter,
        t_shop_finance.create_time,
        t_shop_finance.update_time,
        t_shop_finance.delete_time,
        t_shop_finance.operator,
        t_shop_finance.operate_time,
        t_shop_finance.shop_name,
        t_shop_finance.shop_code, t_shop_finance.sale_amount,
        t_shop_finance.is_valid, t_shop_finance.sale_date,
        t_shop_finance.pay_way, t_shop_finance.income_and_expenses,
        t_shop_finance.sale_num
    </sql>

    <select id="getPage" resultType="com.alex.api.finance.vo.shopFinance.ShopFinanceVo">
        select<include refid="Base_Column_List"/>from t_shop_finance
        <where>
            t_shop_finance.is_delete = 0
            <include refid="queryInfo"/>
        </where>
        order by t_shop_finance.operate_time desc
    </select>

    <select id="queryShopFinance" resultType="com.alex.api.finance.vo.shopFinance.ShopFinanceVo">
        select
        <include refid="Base_Column_List"/>
        from t_shop_finance
        <where>
            t_shop_finance.id = #{id}
            and t_shop_finance.is_delete = 0
        </where>
    </select>

    <sql id="queryInfo">
        <if test="shopFinanceVo != null">
            <if test="shopFinanceVo.shopName != null">
                and t_shop_finance.shop_name like concat('%', #{shopFinanceVo.shopName}, '%')
            </if>
            <if test="shopFinanceVo.shopCode != null">
                and t_shop_finance.shop_code like concat('%', #{shopFinanceVo.shopCode}, '%')
            </if>
            <if test="shopFinanceVo.saleAmount != null">
                and t_shop_finance.sale_amount = #{shopFinanceVo.saleAmount}
            </if>
            <if test="shopFinanceVo.saleAmountFrom != null">
                and t_shop_finance.sale_amount >= #{shopFinanceVo.saleAmountFrom}
            </if>
            <if test="shopFinanceVo.saleAmountEnd != null">
                and t_shop_finance.sale_amount &lt;= #{shopFinanceVo.saleAmountEnd}
            </if>
            <if test="shopFinanceVo.isValid != null">
                and t_shop_finance.is_valid like concat('%', #{shopFinanceVo.isValid}, '%')
            </if>
            <if test="shopFinanceVo.saleDate != null">
                and t_shop_finance.sale_date = #{shopFinanceVo.saleDate}
            </if>
            <if test="shopFinanceVo.saleDateFrom != null">
                and t_shop_finance.sale_date >= #{shopFinanceVo.saleDateFrom}
            </if>
            <if test="shopFinanceVo.saleDateEnd != null">
                and t_shop_finance.sale_date &lt; DATE_ADD(#{shopFinanceVo.saleDateEnd}, interval 1 day)
            </if>
            <if test="shopFinanceVo.incomeAndExpenses != null">
                and t_shop_finance.income_and_expenses = #{shopFinanceVo.incomeAndExpenses}
            </if>
            <if test="shopFinanceVo.payWay != null">
                and t_shop_finance.pay_way = #{shopFinanceVo.payWay}
            </if>
        </if>
    </sql>

    <select id="getDayShopFinanceInfo" resultType="com.alex.api.finance.vo.shopFinanceAnalysis.ShopFinanceAnalysisVo">
        WITH RECURSIVE date_series AS (
        SELECT
            concat(#{searchDate}, '-01') AS DATE
        UNION ALL
        SELECT
            DATE_ADD( DATE, INTERVAL 1 DAY )
        FROM
            date_series
        WHERE
            DATE_ADD( DATE, INTERVAL 1 DAY ) &lt; last_day( concat(#{searchDate}, '-01') ) + INTERVAL 1 DAY
        ) SELECT
        date_info.DATE AS info_date,
        IFNULL( info.sale_amount, 0 ) AS sale_amount,
        IFNULL( info.sale_num, 0 ) AS sale_num
    FROM
        date_series AS date_info
        LEFT JOIN (
        SELECT
            DATE_FORMAT( sale_date, '%Y-%m-%d' ) AS dateinfo,
            sum( sale_amount ) AS sale_amount,
            sum( sale_num ) AS sale_num
        FROM
            t_shop_finance
        WHERE
            sale_date >= cast( concat(#{searchDate}, '-01') AS DATETIME )
            AND sale_date &lt; DATE_ADD( cast( concat(#{searchDate}, '-01') AS DATETIME ), INTERVAL 1 MONTH )
            AND is_valid = '1'
            AND is_delete = '0'
        GROUP BY
            dateinfo
        ) info ON date_info.DATE = info.dateinfo
    ORDER BY
        date_info.DATE
    </select>

    <select id="getMonthShopFinanceInfo" resultType="com.alex.api.finance.vo.shopFinanceAnalysis.ShopFinanceAnalysisVo">
        WITH recursive c ( n ) AS ( SELECT 0 UNION ALL SELECT n + 1 FROM c WHERE n &lt; 12 ) SELECT
        date_info.n AS info_date,
        ifnull( info.sale_amount, 0 ) AS sale_amount ,
        ifnull( info.sale_num, 0 ) AS sale_num
        FROM
            ( SELECT c.n FROM c ) date_info
            LEFT JOIN (
            SELECT
                DATE_FORMAT( sale_date, '%m' ) AS dateinfo,
                sum( sale_amount ) AS sale_amount,
                sum( sale_num ) AS sale_num
            FROM
                t_shop_finance 
            WHERE
                sale_date >= cast( concat( SUBSTR( #{searchDate}, 1, 4 ), '-01-01' ) AS DATETIME ) 
                AND sale_date &lt; DATE_ADD( cast( concat( #{searchDate}, '-01' ) AS DATETIME ), INTERVAL 1 MONTH ) 
                AND is_valid = '1' 
                AND is_delete = '0' 
            GROUP BY
                dateinfo 
            ) info ON info.dateinfo = date_info.n 
        ORDER BY
            date_info.n
    </select>

    <select id="getPayWayInfo" resultType="com.alex.api.finance.vo.shopFinanceAnalysis.ShopFinanceAnalysisVo">
        SELECT
          t_shop_finance.pay_way,
          dict_info.type_name as pay_way_name,
          sum(t_shop_finance.sale_amount) AS sale_amount,
          sum(t_shop_finance.sale_num) AS sale_num
        FROM
          t_shop_finance
        left join dict_info
            on dict_info.type_code = t_shop_finance.pay_way
            and dict_info.belong_to = 'shop_pay_way'
            and dict_info.is_valid = '1'
            and dict_info.is_delete = '0'
        WHERE
            t_shop_finance.sale_date >= cast(
            concat(SUBSTR(#{searchDate}, 1, 4), '-01-01') AS DATETIME
          )
          AND t_shop_finance.sale_date &lt; DATE_ADD(
            cast(concat(#{searchDate}, '-01') AS DATETIME),
            INTERVAL 1 MONTH
          )
          AND t_shop_finance.is_valid = '1'
          AND t_shop_finance.is_delete = '0'
        group by
          t_shop_finance.pay_way,
          dict_info.type_name
    </select>
    
    <select id="getShopNameInfo" resultType="com.alex.api.finance.vo.shopFinanceAnalysis.ShopFinanceAnalysisVo">
        SELECT
          shop_name,
          sum(sale_amount) AS sale_amount,
          sum(sale_num) AS sale_num
        FROM
          t_shop_finance
        WHERE
          sale_date >= cast(
            concat(SUBSTR(#{searchDate}, 1, 4), '-01-01') AS DATETIME
          )
          AND sale_date &lt; DATE_ADD(
            cast(concat(#{searchDate}, '-01') AS DATETIME),
            INTERVAL 1 MONTH
          )
          AND is_valid = '1'
          AND is_delete = '0'
        group by
          shop_name
    </select>
    
    <select id="getChainAndYear" resultType="">
        select
          cur_info.dateinfo,
          cur_info.sale_amount,
          cur_info.sale_num,
          last_month.sale_amount,
          last_month.sale_num,
          last_year.sale_amount,
          last_year.sale_num,
          case
            when last_month.sale_amount is null
            or last_month.sale_amount = 0 then 0
            else (cur_info.sale_amount - last_month.sale_amount) / last_month.sale_amount
          end as sale_amount_chain,
          case
            when last_month.sale_num is null
            or last_month.sale_num = 0 then 0
            else (cur_info.sale_num - last_month.sale_num) / last_month.sale_num
          end as sale_num_chain,
          case
            when last_year.sale_amount is null
            or last_year.sale_amount = 0 then 0
            else (cur_info.sale_amount - last_year.sale_amount) / last_year.sale_amount
          end as sale_amount_year,
          case
            when last_year.sale_num is null
            or last_year.sale_num = 0 then 0
            else (cur_info.sale_num - last_year.sale_num) / last_year.sale_num
          end as sale_num_year
        from
          (
            SELECT
              DATE_FORMAT(sale_date, '%m') AS dateinfo,
              sum(sale_amount) AS sale_amount,
              sum(sale_num) AS sale_num
            FROM
              t_shop_finance
            WHERE
              sale_date >= cast(concat('2024-03', '-01') AS DATETIME)
              AND sale_date &lt; DATE_ADD(
                cast(concat('2024-03', '-01') AS DATETIME),
                INTERVAL 1 MONTH
              )
              AND is_valid = '1'
              AND is_delete = '0'
            GROUP BY
              dateinfo
          ) as cur_info
          left join (
            SELECT
              DATE_FORMAT(sale_date, '%m') AS dateinfo,
              sum(sale_amount) AS sale_amount,
              sum(sale_num) AS sale_num
            FROM
              t_shop_finance
            WHERE
              sale_date >= DATE_ADD(
                cast(concat('2024-03', '-01') AS DATETIME),
                INTERVAL 1 MONTH
              )
              AND sale_date &lt; cast(concat('2024-03', '-01') AS DATETIME)
              AND is_valid = '1'
              AND is_delete = '0'
            GROUP BY
              dateinfo
          ) as last_month on last_month.dateinfo = cur_info.dateinfo
          left join (
            SELECT
              DATE_FORMAT(sale_date, '%m') AS dateinfo,
              sum(sale_amount) AS sale_amount,
              sum(sale_num) AS sale_num
            FROM
              t_shop_finance
            WHERE
              sale_date >= DATE_ADD(
                cast(concat('2024-03', '-01') AS DATETIME),
                interval -1 year
              )
              AND sale_date &lt; DATE_ADD(
                cast(concat('2024-03', '-01') AS DATETIME),
                INTERVAL -11 MONTH
              )
              AND is_valid = '1'
              AND is_delete = '0'
            GROUP BY
              dateinfo
          ) as last_year on last_year.dateinfo = cur_info.dateinfo
    </select>
</mapper>
