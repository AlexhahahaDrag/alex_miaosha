<% var hasDate = false; %>
<% for(field in table.fields){
    if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){
       hasDate = true;
    }
} %>
<template>
    <navBar :info="info"></navBar>
    <van-form @submit="onSubmit" :rules="rulesRef">
        <van-cell-group>
        <% for(field in table.fields){
            if(field.keyFlag) {
                continue;
            }
            if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
            <van-field v-model="${field.propertyName}Name" name="${field.propertyName}" :label="label.${field.propertyName} + '：'"
                :placeholder="'请输入' + label.${field.propertyName}" :rules="rulesRef.${field.propertyName}" @click="chooseDate('${field.propertyName}')" readonly />
            <% } else { %>
            <van-field v-model="formInfo.${field.propertyName}" name="${field.propertyName}" :label="label.${field.propertyName} + '：'"
                :placeholder="'请输入' + label.${field.propertyName}" :rules="rulesRef.${field.propertyName}" />
            <% } %>
        <% } %>
            <!--  <van-field v-model="belongToName" name="belongTo" :label="label.belongTo + '：'"
                :placeholder="'请输入' + label.belongTo" :rules="rulesRef.belongTo" @click="choose('belongTo')" readonly /> -->
            <!--   <selectPop :info="popInfo" @selectInfo="selectInfo" @cancelInfo="cancelInfo"></selectPop> -->
            <% if(hasDate) { %>
            <datePop :info="chooseDateInfo" @selectInfo="selectDateInfo" @cancelInfo="cancelDateInfo"></datePop>
            <% } %>
        </van-cell-group>
        <div style="margin: 16px;">
            <van-button round block type="primary" native-type="submit">
                提交
            </van-button>
        </div>
    </van-form>
</template>

<script setup lang="ts">
import { ref, reactive } from 'vue';
import { useRoute, useRouter } from "vue-router";
import navBar from '@/views/common/navBar/index.vue';
<% if(hasDate){ %>
import dayjs, { Dayjs } from 'dayjs';
<% } %>
// import selectPop from '@/views/common/pop/selectPop.vue';
import { Info } from '@/views/common/pop/selectPop.vue';
import datePop from '@/views/common/pop/datePop.vue';
import { showFailToast, showSuccessToast } from 'vant';
import { addOrEdit${entity}, get${entity}Detail } from '@/api/${javaPath}/${strutil.toLowerCase(strutil.subStringTo(entity, 0, 1)) + strutil.subString (entity, 1)}/${strutil.toLowerCase(strutil.subStringTo(entity, 0, 1)) + strutil.subString (entity, 1)}Ts';

let route = useRoute();
let router = useRouter();
const info = ref<any>({
    title: route?.meta?.title || '${table.comment!}',
});
// TODO 修改成类型
let formInfo = ref<any>({});

const label = reactive({
    <% for(field in table.fields){
           if(field.keyFlag) {
                continue;
           }
      %>
    ${field.propertyName}: '${field.comment}',
    <% } %>
});

const rulesRef = reactive({
<% for(field in table.fields){
       if(field.keyFlag) {
            continue;
       }
  %>
    ${field.propertyName}: [
        {
            required: true,
            message: '${field.comment}不能为空！',
        },
    ],
<% } %>
});

// let popInfo = ref<Info>({ showFlag: false });

// const choose = (type: string) => {
//    switch (type) {
//        case 'belongTo':
//            popInfo.value = belongToInfo.value;
//            break;
//    }
//    popInfo.value.showFlag = true;
// };

// const selectInfo = (type: string, value: any, name: string) => {
//    popInfo.value.showFlag = false;
//    switch (type) {
//        case 'belongTo':
//            formInfo.value.belongTo = value;
//            belongToName.value = name;
//           break;
//    }
// };

// const cancelInfo = () => {
//    popInfo.value.showFlag = false;
// };

<% if(hasDate) { %>
    <% for(field in table.fields){
        if(field.keyFlag) {
            continue;
        }
        if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
let ${field.propertyName}Name = ref<string>('');
let ${field.propertyName}Info = ref<any>({
    label: '${field.propertyName}',
    labelName: 'field.comment',
    rule: rulesRef.${field.propertyName},
    selectValue: dayjs(),
    showFlag: false,
    formatter: (type: string, option: any) => {
        if (type === 'year') {
            option.text += '年';
        }
        if (type === 'month') {
            option.text += '月';
        }
        if (type === 'day') {
            option.text += '日';
        }
        return option;
    },
});
        <% } %>
    <% } %>

let chooseDateInfo = ref<Info>({ showFlag: false });

const chooseDate = (type: string) => {
    chooseDateInfo.value.showFlag = true;
    switch (type) {
    <% for(field in table.fields){
        if(field.keyFlag) {
            continue;
        }
        if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
        case '${field.propertyName}':
            chooseDateInfo.value = ${field.propertyName}Info.value
            break;
        <% } %>
    <% } %>
    }
};

const selectDateInfo = (date: Dayjs, dateName: string, type: string) => {
    switch(type) {
    <% for(field in table.fields){
        if(field.keyFlag) {
            continue;
        }
        if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
        case '${field.propertyName}':
            formInfo.value.${field.propertyName} = date;
            ${field.propertyName}Name.value = dateName;
            break;
        <% } %>
    <% } %>
    }
    chooseDateInfo.value.showFlag = false;
};

const cancelDateInfo = () => {
    chooseDateInfo.value.showFlag = false;
}

const initInfoDate = (infoDate: Dayjs, type: string) => {
    if (infoDate) {
        switch(type) {
        <% for(field in table.fields){
            if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
            case '${field.propertyName}':
                ${field.propertyName}Name.value = dayjs(infoDate).format('YYYY-MM-DD');
                ${field.propertyName}Info.value.selectValue = infoDate;
                break;
            <% } %>
        <% } %>
        }
    }
}
<% } %>

const onSubmit = () => {
    let method = 'post';
    if (formInfo.value.id) {
        method = 'put'
    }
    addOrEdit${entity}(method, formInfo.value).then((res: any) => {
        if (res?.code == '200') {
            showSuccessToast(res?.message || '保存成功!');
            router.push({ path: '${javaPath}/${strutil.toLowerCase(strutil.subStringTo(entity, 0, 1)) + strutil.subString (entity, 1)}/${strutil.toLowerCase(strutil.subStringTo(entity, 0, 1)) + strutil.subString (entity, 1)}' });
        } else {
            showFailToast (res?.message || '保存失败，请联系管理员!');
        }
    });
};

// const getListName = (list: any[], value: any, code: string, name: string) => {
//    if (!list?.length) {
//        return '';
//    }
//    let listName = '';
//    list.forEach(item => {
//        if (item[code] == value) {
//            listName = item[name];
//        }
//    });
//    return listName;
// };

function init() {
    let id: any = route?.query?.id;
    if (id) {
        get${entity}Detail(id || '-1').then((res: any) => {
            if (res.code == '200') {
                formInfo.value = res.data;
                <% for(field in table.fields){
                    if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
                initInfoDate(formInfo.value.${field.propertyName}, '${field.propertyName}');
                    <% } %>
                <% } %>
            } else {
                showFailToast(res?.message || '查询详情失败，请联系管理员!')
            }
        }).catch(() => {
            showFailToast('系统问题，请联系管理员！')
        });
    } else {
        formInfo.value = {
        <% for(field in table.fields){
            if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
            ${field.propertyName}: dayjs(),
            <% } %>
        <% } %>
        };
        <% for(field in table.fields){
            if(field.propertyType == 'LocalDateTime' || field.propertyType == 'Date'){ %>
        initInfoDate(formInfo.value.${field.propertyName}, '${field.propertyName}');
            <% } %>
        <% } %>
    }
}

init();
</script>
<style lang='scss' scoped>
</style>